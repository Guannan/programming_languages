use "hw2provided.sml";

val t_all_except_option = all_except_option("string", ["string"])
val t_all_except_option2 = all_except_option("str", ["string"])
val t_all_except_option3 = all_except_option("string", [])
val t_all_except_option4 = all_except_option("meme", ["string","meme","bob","joe"])
val t_all_except_option5 = all_except_option("", ["string","meme","","goe"])
val t_get_substitutions1 = get_substitutions1([["foo"],["there"]], "foo")
val t_get_substitutions1_2 = get_substitutions1([["Fred","Fredrick"],["Elizabeth","Betty"],["Freddie","Fred","F"]],"Fred")
val t_get_substitutions1_3 = get_substitutions1([["Fred","Fredrick"],["Jeff","Jeffrey"],["Geoff","Jeff","Jeffrey"]],"Jeff")
val t_get_substitutions2 = get_substitutions2([["foo"],["there"]], "foo")
val t_get_substitutions2_2 = get_substitutions2([["Fred","Fredrick"],["Elizabeth","Betty"],["Freddie","Fred","F"]],"Fred")
val t_get_substitutions2_3 = get_substitutions2([["Fred","Fredrick"],["Jeff","Jeffrey"],["Geoff","Jeff","Jeffrey"]],"Jeff")
val t_similar_names = similar_names([["Fred","Fredrick"],["Elizabeth","Betty"],["Freddie","Fred","F"]], {first="Fred", middle="W", last="Smith"})
val t_card_color = card_color ((Clubs, Num 2))
val t_card_value = card_value ((Clubs, Num 2))
val t_remove_card = remove_card ([(Hearts, Ace)], (Hearts, Ace), IllegalMove)
val t_all_same_color = all_same_color ([(Hearts, Ace), (Hearts, Ace)])
val t_sum_cards = sum_cards([(Clubs, Num 2),(Clubs, Num 2)])
val t_score = score ([(Hearts, Num 2),(Clubs, Num 4)],10)
val t_officiate = officiate ([(Hearts, Num 2),(Clubs, Num 4)],[Draw],15)
val t_officiate2 = officiate ([(Clubs,Ace),(Spades,Ace),(Clubs,Ace),(Spades,Ace)],[Draw,Draw,Draw,Draw,Draw],42)
val t_officiate3 = officiate ([(Clubs,Jack),(Spades,Num(8))],[Draw,Discard(Clubs,Jack)],42)
val t_careful_player = careful_player ([(Diamonds,Ace),(Hearts,Ace),(Clubs,Ace),(Spades,Ace)], 33)
val t_careful_player2 = careful_player ([(Diamonds,Ace),(Hearts,Ace),(Clubs,Ace),(Spades,Ace)], 32)
val t_careful_player3 = careful_player ([(Diamonds,Num 3),(Hearts,Num 5),(Clubs,Num 9),(Spades,Ace)], 14)
val t_score_challenge = score_challenge ([(Hearts, Num 2),(Clubs, Num 4)],10)
val t_score_challenge2 = score_challenge ([(Hearts, Num 2),(Clubs, Ace)],10)
val t_score_challenge3 = score_challenge ([(Hearts, Num 2),(Hearts, Ace)],10)
val t_score_challenge4 = score_challenge ([(Hearts, Num 3),(Clubs, Ace)],13)
val t_officiate_challenge = officiate_challenge ([(Diamonds,Ace),(Hearts,Ace),(Clubs,Ace),(Spades,Ace)],[Draw,Draw,Draw,Draw,Draw],23)
val t_officiate_challenge2 = officiate_challenge ([(Diamonds,Ace),(Hearts,Num 3),(Clubs,Num 5),(Spades,Num 1)],[Draw,Draw,Draw,Draw,Draw],23)
val t_officiate_challenge3 = officiate_challenge ([(Diamonds,Ace),(Hearts,Ace),(Clubs,Num 4),(Spades,Num 2)],[Draw,Draw,Draw,Draw,Draw],23)